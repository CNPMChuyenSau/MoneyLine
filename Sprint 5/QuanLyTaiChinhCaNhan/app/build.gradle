

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.vanluom.moneyline"
        versionCode 949
        versionName getVersionAsDate() + "." + versionCode

        minSdkVersion 15 // 4.0.3
        targetSdkVersion 25

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


    }


    sourceSets {
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Disable fabric build id for debug builds
            ext.enableCrashlytics = false;
        }
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    // append the version to the file name.
                    def version = "-" + defaultConfig.versionName
                    def fileName = output.outputFile.name.replace("app-", "ammx-")
                            .replace(".apk", version + ".apk")
                    output.outputFile = new File(output.outputFile.parent, fileName)
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    productFlavors {

    }

    lintOptions {
        // stop the gradle build if errors are found - affects XML resources (strings, etc.).
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    signingConfigs {
        debug {
//            storeFile file("debug.keystore")
            v2SigningEnabled false;
        }
        release {
            keyAlias 'ammex'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true;
    }
}

dependencies {
    compile(
            fileTree(dir: 'libs', include: ['*.jar'])
            , project(':MMEX Icon Font')
            , project(':androidSVG_12')      // androidSVG
            , project(path: ':money')
            , 'com.cloudrail:cloudrail-si-android:2.14.0'
            , 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
            , supportDependencies.support
            , supportDependencies.appCompat
            , supportDependencies.recyclerView
            , supportDependencies.cardView
            , supportDependencies.design
            , supportDependencies.preference
            , supportDependencies.supportAnnotation
            , supportDependencies.gridLayout
            , 'com.opencsv:opencsv:3.8'
            , 'net.objecthunter:exp4j:0.4.7'
            , 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
            , 'commons-io:commons-io:2.5'
            , 'com.afollestad.material-dialogs:core:0.8.6.1'

            , 'com.melnykov:floatingactionbutton:1.3.0'
            , 'com.github.pedrovgs:lynx:1.6'
            , 'com.astuetz:pagerslidingtabstrip:1.0.1'
            , 'de.hdodenhof:circleimageview:2.1.0'
            , 'me.relex:circleindicator:1.2.2'  // Page indicator on tutorial. https://android-arsenal.com/details/1/1268
            , 'com.code-troopers.betterpickers:library:3.1.0'
            , 'com.github.PhilJay:MPAndroidChart:v2.2.5'

            , 'com.google.code.gson:gson:2.7'
            , 'com.squareup.retrofit2:retrofit:2.1.0'            // Retrofit
            , 'com.squareup.retrofit2:converter-gson:2.1.0'
            , 'com.squareup.retrofit2:converter-scalars:2.1.0'
            , 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
// database encryption
            , 'org.greenrobot:eventbus:3.0.0'
            , 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.0.4'
            , 'org.jsoup:jsoup:1.10.2'              // HTML parsing.
            , 'com.google.guava:guava:20.0'         // collection libraries
            , 'com.android.support:multidex:1.0.1'  // multidex support
            , 'com.nononsenseapps:filepicker:3.1.0' // file picker
            , 'io.reactivex:rxandroid:1.2.1'        // RxJava
            , 'io.reactivex:rxjava:1.2.5'
            , 'com.squareup.sqlbrite:sqlbrite:1.1.1'
            , 'com.jakewharton.timber:timber:4.5.0'
            , 'com.jakewharton.rxbinding:rxbinding:1.0.0'    // RxBinding

            , 'com.trello:rxlifecycle:1.0'         // RxLifecycle
            , 'com.shamanland:fonticon:0.1.9'
            , 'com.mikepenz:iconics-core:2.8.2@aar' // also update in the icon module.
            , 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar' // MD icons
            , 'com.roomorama:caldroid:3.0.1'
            , 'com.squareup.picasso:picasso:2.5.2'
// to handle build errors
    )
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.mikepenz:aboutlibraries:5.9.1@aar') {
        transitive = true
    }
    // Parceler
    compile 'org.parceler:parceler-api:1.1.6'
    annotationProcessor 'org.parceler:parceler:1.1.6'
    // Dagger 2
    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
    // ButterKnife
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    // IcePick
    compile 'frankiesardo:icepick:3.2.0'
    provided 'frankiesardo:icepick-processor:3.2.0'

    testCompile(
            'commons-io:commons-io:2.5',
            'junit:junit:4.12',
            'org.robolectric:robolectric:3.2.2',
            'org.robolectric:shadows-support-v4:3.2.2',
            'org.robolectric:shadows-multidex:3.2.2',
            'org.robolectric:shadows-httpclient:3.2.2',
            'com.squareup.assertj:assertj-android:1.1.1',
            // Matchers
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'org.hamcrest:hamcrest-integration:1.3'

            , 'io.selendroid:selendroid-client:0.17.0'
    )
    testCompile('io.selendroid:selendroid-standalone:0.17.0') {
        exclude group: 'io.selendroid', module: 'selendroid-server'
        exclude group: 'io.selendroid', module: 'android-driver-app'
    }

    // UI testing
    androidTestCompile(
            'com.android.support.test:runner:0.5',
            // Set this dependency to use JUnit 4 rules
            'com.android.support.test:rules:0.5',
            // Set this dependency to build and run Espresso tests
            'com.android.support.test.espresso:espresso-core:2.2.2',
            'com.android.support.test.espresso:espresso-contrib:2.2.2',

            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'com.squareup.assertj:assertj-android:1.1.1',
            // Robotium, UI testing
            'com.jayway.android.robotium:robotium-solo:5.6.3'

    )

}

configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
}

static def getVersionAsDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd')
    return formattedDate
}
